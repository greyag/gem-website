{"version":3,"sources":["serviceWorker.js","server/Firebase/context.js","server/Firebase/config.js","server/Firebase/index.js","server/Firebase/firebase.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignIn/usernames.js","components/SignIn/index.js","components/SignUp/index.js","constants/roles.js","components/Home/index.js","components/Admin/index.js","components/Schedule/index.js","constants/focusGroups.js","components/FocusGroups/index.js","components/AddTalk/index.js","components/FocusGroup/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","admin","host","db","ref","users","postTalk","focusGroup","data","file","storeRef","store","child","name","put","path_","fs","collection","doc","add","docRef","catch","error","console","deleteTalk","remove","getBlockTalks","blocks","talks","forEach","block","a","get","push","getAllTalksForGroup","group","getBlocksForGroup","map","talksInBlock","app","initializeApp","config","this","database","firestore","storage","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","state","listener","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","compose","withRouter","NavigationAuth","to","SignOut","NavigationNonAuth","Navigation","Landing","USERNAMES","attendee","INITIAL_STATE","username","SignInFormBase","onSubmit","event","toLowerCase","preventDefault","onChange","target","isInvalid","placeholder","disabled","message","SignInForm","SignInPage","passwordOne","passwordTwo","isHost","isAdmin","SignUpFormBase","set","onChangeCheckbox","checked","SignUpForm","SignUpPage","AdminPage","loading","on","usersObject","usersList","Object","keys","key","off","UserList","SchedulePage","days","GROUPS","IEMIT","longName","hosts","M3_I2","IHMIC","RX","UMEA","BSH","DAYS","RB","CP","IMM","DIP","MMV","Machine_Learning","FocusGroupsPage","groupId","title","selectedFile","AddTalkForm","log","onFileChange","files","bind","params","fileInput","AddTalkLink","pathname","AddTalkPage","blocksAndTalks","FocusGroup","myId","allBlocksComponent","talkObj","times","time","oneBlockComponentPublic","length","talk","exact","path","component","LandingPage","Schedule","HomePage","FocusGroups","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dcdfa5d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nconst FirebaseContext = React.createContext(null)\n\nexport const withFirebase = (Component) => (props) => (\n  <FirebaseContext.Consumer>\n    {(firebase) => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext\n","const firebaseConfig = {\n  apiKey: 'AIzaSyAWceNQIl_fbEN_22LE4VksEPJk9BEGh7c',\n  authDomain: 'gemworkshop.firebaseapp.com',\n  databaseURL: 'https://gemworkshop.firebaseio.com',\n  projectId: 'gemworkshop',\n  storageBucket: 'gemworkshop.appspot.com',\n  messagingSenderId: '583978950039',\n  appId: '1:583978950039:web:b9077c39c84122c85e78d2',\n  measurementId: 'G-HR8WL3C80K',\n}\n\nexport default firebaseConfig\n","import FirebaseContext, { withFirebase } from './context'\nimport Firebase from './firebase'\n\nexport default Firebase\n\nexport { FirebaseContext, withFirebase }\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport config from './config'\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config)\n    this.auth = app.auth()\n    this.db = app.database()\n    this.fs = app.firestore()\n    this.store = app.storage().ref()\n  }\n\n  // ** Auth API **\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password)\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password)\n\n  doSignOut = () => this.auth.signOut()\n\n  //** Merge Auth and DB User API */\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then((snapshot) => {\n            const dbUser = snapshot.val()\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = {\n                admin: false,\n                host: false,\n              }\n            }\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              ...dbUser,\n            }\n\n            next(authUser)\n          })\n      } else {\n        fallback()\n      }\n    })\n\n  // ** User Api **\n  user = (uid) => this.db.ref(`users/${uid}`)\n\n  users = () => this.db.ref('users')\n\n  // ** Schedule API **\n  // getDaySchedule = (day) => {\n  //   this.fs.collection(`'days'${day}`)\n  // }\n  // getBlockInfo = (day, block) => {\n  //   this.fs.doc(`days/${day}/${block}`)\n  // }\n\n  // ** Talk API **\n  postTalk = (focusGroup, data, file = null) => {\n    //console.log('postTalk:', focusGroup, data, file)\n    if (file) {\n      //console.log('trying to upload')\n      const storeRef = this.store\n        .child('talks')\n        .child(focusGroup)\n        .child(file.name)\n      storeRef.put(file).then((snapshot) => {\n        //console.log('uploaded file')\n      })\n      //console.log(storeRef)\n      data['file'] = storeRef.location.path_\n    }\n    this.fs\n      .collection('focusGroups')\n      .doc(focusGroup)\n      .collection('blocks')\n      .doc('unscheduled')\n      .collection('talks')\n      .add(data)\n      .then((docRef) => {\n        //console.log('new doc id:', docRef.id)\n      })\n      .catch((error) => {\n        console.error('Error adding talk:', error)\n      })\n  }\n  // moveTalkToBlock = (oldRef, newBlock) => {\n  //   oldRef.get().once('value', (snapshot) => {\n  //     let ref = snapshot.ref()\n  //     ref = ref\n  //       .parent() //talks collection\n  //       .parent() //old block doc\n  //       .parent() //blocks collection\n  //       .doc(newBlock)\n  //       .collection(`talks`)\n  //       .doc(oldRef.id)\n  //     ref.set(snapshot.value(), (error) => {\n  //       if (!error) {\n  //         oldRef.remove()\n  //         this.updateBlock(newBlock, oldRef.id)\n  //       } else console.error(error)\n  //     })\n  //   })\n  // }\n  deleteTalk = (ref) => ref.remove()\n\n  // updateBlock(focusGroup, blockId, talkId) {\n  //   this.fs\n  //     .collection(`focusGroups`)\n  //     .doc(focusGroup)\n  //     .collection('blocks')\n  //     .doc(blockId)\n  //     .get()\n  //     .then((snapshot) => {\n  //       if (snapshot) {\n  //         let data = snapshot.data()\n  //         if (!data.talkIds || data.talkIds.length <= 0) {\n  //           data.talkIds.talks = []\n  //         }\n  //         data.talkIds.talks.push(talkId)\n  //         this.fs\n  //           .collection(`focusGroups`)\n  //           .doc(focusGroup)\n  //           .collection('blocks')\n  //           .doc(blockId)\n  //           .set(data, { merge: true })\n  //         console.log(`block updated`)\n  //       } else console.error(`Block not found`)\n  //     })\n  // }\n  // getBlocksForGroup = async (group) => {\n  //   let blocks = []\n  //   console.log(`in firebase`)\n  //   try {\n  //     let blocks = []\n  //     let snapshot = await this.fs\n  //       .collection(`focusGroups/${group}/blocks`)\n  //       .get()\n  //     console.log('ss', snapshot)\n  //     snapshot.forEach((doc) => {\n  //       console.log('doc', doc)\n  //       console.log(doc.id)\n  //       blocks.push(doc.id)\n  //     })\n  //   } catch (error) {\n  //     console.error(error)\n  //   }\n  //   return blocks\n  // }\n\n  getBlockTalks = (focusGroup, blocks) => {\n    let talks = {}\n    blocks.forEach(async (block) => {\n      talks[block] = []\n      try {\n        let snapshot = await this.fs\n          .collection(`focusGroups/${focusGroup}/blocks/${block}/talks`)\n          .get()\n        snapshot.forEach((doc) => {\n          talks[block].push(doc.data())\n        })\n      } catch (error) {\n        console.error(error)\n      }\n    })\n    return talks\n  }\n  //console.log(focusGroup, block)\n  // this.fs\n  //   .collection('focusGroups')\n  //   .doc(focusGroup)\n  //   .collection('blocks')\n  //   .doc(block)\n  //   .collection('talks')\n  //   .get()\n  //   .then((snapshot) => {\n  //     if (snapshot) {\n  //       //console.log('ss', snapshot)\n  //       snapshot.forEach((doc) => {\n  //         let data = { ...doc.data() }\n  //         talks.push(data)\n  //       })\n  // let data = snapshot\n  // console.log(data)\n  // if (!data.talkIds || data.talkIds.length <= 0) {\n  //   console.log('no talks yet')\n  //   return\n  // }\n  // talks = data.talkIds.map((talkId) => {\n  //   return this.getTalk(focusGroup, block, talkId)\n  // })\n\n  getAllTalksForGroup = async (group) => {\n    let blocks = await this.getBlocksForGroup(group)\n    let talks = blocks.map(async (block) => {\n      let talksInBlock = await this.getBlockTalks(group, block)\n      return { block: block, talks: talksInBlock }\n    })\n    //console.log('talky:', talks)\n    // .then((blocks) => {\n    //   console.log('blocks2:', blocks)\n    //   blocks.forEach((block) =>\n    //     this.getBlockTalks(group, block).then((talks) => talks.push(talks))\n    //   )\n    // })\n    // console.log(talks)\n    return talks\n  }\n\n  // getTalk = (focusGroup, block, talkId) => {\n  //   let talk = {}\n  //   this.fs\n  //     .collection('focusGroups')\n  //     .doc(focusGroup)\n  //     .collection('blocks')\n  //     .doc(block)\n  //     .collection(`talks`)\n  //     .doc(talkId)\n  //     .get()\n  //     .then((snapshot) => {\n  //       talk = snapshot.data()\n  //     })\n  //   return talk\n  // }\n  // moveTalkInBlock = (focusGroup, block, from, to) => {\n  //   this.fs\n  //     .collection('focusGroups')\n  //     .doc(focusGroup)\n  //     .collection('blocks')\n  //     .doc(block)\n  //     .get()\n  //     .then((snapshot) => {\n  //       let data = snapshot.data()\n  //       if (!data.talkIds || data.talkIds.length <= 0) {\n  //         console.error('no talks to move')\n  //         return\n  //       }\n  //       data.talkIds.splice(to, 0, ...data.talkIds.splice(from, 1))\n\n  //       this.fs\n  //         .collection('focusGroups')\n  //         .doc(focusGroup)\n  //         .collection('blocks')\n  //         .doc(block)\n  //         .set(data, { merge: true })\n  //         .then(() => console.log(`block reorderred`))\n  //     })\n  // }\n  // getFocusGroups = () => {\n  //   let focusGroups = []\n  //   this.fs\n  //     .collection(`focusGroups`)\n  //     .get()\n  //     .then((snapshot) => {\n  //       focusGroups = snapshot.map((doc) => doc.data())\n  //     })\n  //   return focusGroups\n  // }\n}\n\nexport default Firebase\n","import React from 'react'\n\nimport { withFirebase } from '../../server/Firebase'\n\nconst SignOutButtonBase = ({ firebase }) => (\n  <button type='button' onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n)\n\nexport default withFirebase(SignOutButtonBase)\n","import React from 'react'\n\nconst AuthUserContext = React.createContext(null)\n\nexport default AuthUserContext\n","import React from 'react'\n\nimport AuthUserContext from './context'\nimport { withFirebase } from '../../server/Firebase'\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props)\n\n      this.state = {\n        authUser: null,\n      }\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        (authUser) => {\n          this.setState({ authUser })\n        },\n        () => {\n          this.setState({ authUser: null })\n        }\n      )\n    }\n    componentWillUnmount() {\n      this.listener()\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      )\n    }\n  }\n  return withFirebase(WithAuthentication)\n}\n\nexport default withAuthentication\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\n\nimport AuthUserContext from './context'\nimport { withFirebase } from '../../server/Firebase'\nimport * as ROUTES from '../../constants/routes'\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        (authUser) => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN)\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN)\n      )\n    }\n\n    componentWillUnmount() {\n      this.listener()\n    }\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      )\n    }\n  }\n  return compose(withRouter, withFirebase)(WithAuthorization)\n}\n\nexport default withAuthorization\n","export const LANDING = '/'\nexport const SIGN_UP = '/signup'\nexport const SIGN_IN = '/signin'\nexport const HOME = '/home'\nexport const ADMIN = '/admin'\nexport const SCHEDULE = '/schedule'\nexport const FOCUSGROUPS = '/focusgroups'\nexport const ONEFOCUSGROUP = '/focusgroups/:focusId'\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport * as ROUTES from '../../constants/routes'\nimport SignOutButton from '../SignOut'\nimport { AuthUserContext } from '../Session'\nimport * as ROLES from '../../constants/roles'\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {(authUser) =>\n        authUser ? (\n          <NavigationAuth authUser={authUser} />\n        ) : (\n          <NavigationNonAuth />\n        )\n      }\n    </AuthUserContext.Consumer>\n  </div>\n)\n\nconst NavigationAuth = ({ authUser }) => (\n  <ul>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SCHEDULE}>Schedule</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.FOCUSGROUPS}>Focus Groups</Link>\n    </li>\n    {!!authUser.roles[ROLES.ADMIN] && (\n      <li>\n        <Link to={ROUTES.ADMIN}>Admin </Link>\n      </li>\n    )}\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n)\n\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SCHEDULE}>Schedule</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.FOCUSGROUPS}>Focus Groups</Link>\n    </li>\n  </ul>\n)\n\nexport default Navigation\n","import React from 'react'\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n)\n\nexport default Landing\n","export const USERNAMES = {\n  host: 'vgemhost@gmail.com',\n  attendee: 'vgemattendee@gmail.com',\n  admin: 'gretagadbois@gmail.com',\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\n\n//import { SignUpLink } from '../SignUp'\nimport { withFirebase } from '../../server/Firebase'\nimport * as ROUTES from '../../constants/routes'\nimport { USERNAMES } from './usernames'\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    {/* <SignUpLink />  */}\n  </div>\n)\n\nconst INITIAL_STATE = {\n  username: '',\n  password: '',\n  error: null,\n}\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { ...INITIAL_STATE }\n  }\n\n  onSubmit = (event) => {\n    const { username, password } = this.state\n    this.props.firebase\n      .doSignInWithEmailAndPassword(USERNAMES[username.toLowerCase()], password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE })\n        this.props.history.push(ROUTES.HOME)\n      })\n      .catch((error) => {\n        this.setState({ error })\n      })\n\n    event.preventDefault()\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    const { username, password, error } = this.state\n\n    const isInvalid = password === '' || username === ''\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='username'\n          value={username}\n          onChange={this.onChange}\n          type='text'\n          placeholder='Username'\n        />\n        <input\n          name='password'\n          value={password}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Password'\n        />\n        <button disabled={isInvalid} type='submit'>\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    )\n  }\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase)\n\nexport default SignInPage\n\nexport { SignInForm }\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\n\nimport { withFirebase } from '../../server/Firebase'\nimport * as ROUTES from '../../constants/routes'\nimport * as ROLES from '../../constants/roles'\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n)\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isHost: false,\n  isAdmin: false,\n  error: null,\n}\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { ...INITIAL_STATE }\n  }\n\n  onSubmit = (event) => {\n    const { username, email, passwordOne } = this.state\n    const roles = {}\n    if (this.state.isAdmin) {\n      roles[ROLES.ADMIN] = ROLES.ADMIN\n    }\n    if (this.state.isHost) {\n      roles[ROLES.HOST] = ROLES.HOST\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({ username, email, roles })\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE })\n        this.props.history.push(ROUTES.HOME)\n      })\n      .catch((error) => {\n        this.setState({ error })\n      })\n    event.preventDefault()\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked })\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      isHost,\n      error,\n    } = this.state\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === ''\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name='username'\n          value={username}\n          onChange={this.onChange}\n          type='text'\n          placeholder='Full Name'\n        />\n        <input\n          name='email'\n          value={email}\n          onChange={this.onChange}\n          type='text'\n          placeholder='Email Address'\n        />\n        <input\n          name='passwordOne'\n          value={passwordOne}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Password'\n        />\n        <input\n          name='passwordTwo'\n          value={passwordTwo}\n          onChange={this.onChange}\n          type='password'\n          placeholder='Confirm Password'\n        />\n        <label>\n          Admin:\n          <input\n            name='isAdmin'\n            type='checkbox'\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <label>\n          Host:\n          <input\n            name='isHost'\n            type='checkbox'\n            checked={isHost}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type='submit'>\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    )\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n)\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase)\n\nexport default SignUpPage\n\nexport { SignUpForm, SignUpLink }\n","export const HOST = 'HOST'\nexport const ATTENDEE = 'ATTENDEE'\nexport const ADMIN = 'ADMIN'\n","import React from 'react'\n\nimport { withAuthorization } from '../Session'\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </div>\n)\n\nconst condition = (authUser) => !!authUser\n\nexport default withAuthorization(condition)(HomePage)\n","import React, { Component } from 'react'\nimport { compose } from 'recompose'\nimport * as ROLES from '../../constants/roles'\nimport { withAuthorization } from '../Session'\nimport { withFirebase } from '../../server/Firebase/'\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loading: false,\n      users: [],\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true })\n    this.props.firebase.users().on('value', (snapshot) => {\n      const usersObject = snapshot.val()\n      const usersList = Object.keys(usersObject).map((key) => ({\n        ...usersObject[key],\n        uid: key,\n      }))\n      this.setState({\n        users: usersList,\n        loading: false,\n      })\n    })\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off()\n  }\n\n  render() {\n    const { users, loading } = this.state\n    return (\n      <div>\n        <h1>Admin</h1>\n        <p>The Admin Page is accessible by every signed in admin user.</p>\n        {loading && <div>Loading...</div>}\n        <UserList users={users} />\n      </div>\n    )\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map((user) => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n)\n\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN]\n\nexport default compose(withAuthorization(condition), withFirebase)(AdminPage)\n","import React, { Component } from 'react'\nimport { compose } from 'recompose'\n//import * as ROLES from '../../constants/roles'\n//import { withAuthorization } from '../Session'\nimport { withFirebase } from '../../server/Firebase'\n\nclass SchedulePage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loading: false,\n      days: {},\n    }\n  }\n\n  // componentDidMount() {\n  //   this.setState({ loading: true })\n  //   this.props.firebase.days().('value', (snapshot) => {\n  //     const daysObject = snapshot.val()\n  //     // const usersList = Object.keys(usersObject).map((key) => ({\n  //     //   ...usersObject[key],\n  //     //   uid: key,\n  //     // }))\n  //     console.log(daysObject)\n  //     this.setState({\n  //       days: daysObject,\n  //       loading: false,\n  //     })\n  //   })\n  // }\n\n  // componentWillUnmount() {\n  //   //this.props.firebase.days()\n  // }\n\n  render() {\n    const { loading } = this.state\n    return (\n      <div>\n        <h1>Schedule</h1>\n        <p>Tschser.</p>\n        {loading && <div>Loading...</div>}\n        {/* <UserList users={users} /> */}\n      </div>\n    )\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map((user) => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n)\n\n//const condition = (authUser) => !!authUser.roles[ROLES.ADMIN]\n\nexport default compose(withFirebase)(SchedulePage)\n","export const GROUPS = {\n  IEMIT: {\n    longName: '3D Ionospheric Electrodynamics and Its Impact on MIT coupling',\n    hosts: 'Hyunju Connor, Haje Korth, Gang Lu, Bin Zhang',\n    blocks: ['tuesAft', 'tuesEve', 'wedEve'],\n  },\n\n  M3_I2: {\n    longName:\n      'Merged Modeling & Measurement of Injection Ionospheric Plasma into the Magnetosphre and its Effects',\n    hosts: 'Vince Eccles, Barbara Giles, Shasha Zu',\n    blocks: ['wedAft', 'wedEve'],\n  },\n  IHMIC: {\n    longName: 'Interhemispheric Approaches to Understand M-I Coupling',\n    hosts: 'Hyomin Kim, Robert Lysak, Tomoko Matsuo',\n    blocks: ['thursAft', 'wedEve'],\n  },\n  RX: {\n    longName:\n      'Magnetic Reconnection in the Age of the Heliophysics System Observatory',\n    hosts: 'Rick Wilder, Shan Wang, Michael Shay, Anton Artemyev',\n    blocks: ['tuesAft', 'tuesEve'],\n  },\n  UMEA: {\n    longName: 'ULF Wave Modeling, Effects, and Applications',\n    hosts:\n      'Michael Hartinger, Kazue Takahashi, Alexander Drozdov, Maria Usanova, Brian Kress',\n    blocks: ['wedAft', 'wedEve'],\n  },\n  BSH: {\n    longName:\n      'Particle Heating and Thermalization in Collisionless Shocks in the MMS Era',\n    hosts: 'Lynn Wilson, Li-Jen Chen, Kathrine Goodrich, Ivan Vasko',\n    blocks: ['tuesAft', 'tuesEve'],\n  },\n  DAYS: {\n    longName:\n      'Dayside Kinetic Processes in Global Solar Wind- Magnetosphere Interaction',\n    hosts:\n      'Heli Hietala, Xochitl Blanco-Cano, Gabor Toth, Andrew Dimmock, Ying Zou',\n    blocks: ['thursAft', 'ThursEve'],\n  },\n  RB: {\n    longName:\n      'System Understanding of Radiation Belt Particle Dynamics through Multi-spacecraft and Ground-based Observations and Modeling',\n    hosts: 'Hong Zhao, Lauren Blum, Sasha Ukhorskiy, Xiangrong Fu',\n    blocks: ['tuesAft', 'tuesEve'],\n  },\n  CP: {\n    longName: 'The Impact of the Cold Plasma in the Magnetospheric Physics',\n    hosts:\n      'Gian Luca Delzanno, Natalia Buzulukosva, Barbara Giles, Roger Varney, Joe Borovsky',\n    blocks: ['thursAft', 'thursEve'],\n  },\n  IMM: {\n    longName: 'Self-Consistent Inner Magnetospheric Modelling',\n    hosts: 'Cristian Ferradas, Chao Yue, Jacob Bortnik, Qianli Ma, Sam Bingham',\n    blocks: ['wedAft', 'wedEve', 'thursEve'],\n  },\n  DIP: {\n    longName:\n      'Magnetotail Dipolarization and Its Effects on the Inner Magnetosphere',\n    hosts:\n      'Christine Gabrielse, Matina Gkioulidou, Slava Merkin, Drew Turner, David Malaspina',\n    blocks: ['wedAft', 'thursAft'],\n  },\n  MMV: {\n    longName: 'Modeling methods and validation',\n    hosts: 'Mike Liemohn, Lutz Rastaetter, Alexa Halford, Josh Rigler',\n    blocks: ['wedAft'],\n  },\n  Machine_Learning: {\n    longName: 'Machine Learning as it pertains in the Geospace Environment',\n    hosts: 'Matt Argal',\n    blocks: ['thursEve'],\n  },\n}\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n//import { compose } from 'recompose'\n\n//import { SignUpLink } from '../SignUp'\n//import { withFirebase } from '../../server/Firebase'\nimport * as ROUTES from '../../constants/routes'\nimport { GROUPS } from '../../constants/focusGroups'\n\nconst FocusGroupsPage = () => (\n  <div>\n    <h1>Focus Groups</h1>\n    {Object.keys(GROUPS).map((group) => (\n      <div>\n        <Link to={`${ROUTES.FOCUSGROUPS}/${group}`}>{group}</Link>\n      </div>\n    ))}\n  </div>\n)\n\nexport default FocusGroupsPage\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\n\nimport { withFirebase } from '../../server/Firebase'\nimport { withAuthorization } from '../Session'\nimport * as ROUTES from '../../constants/routes'\nimport * as ROLES from '../../constants/roles'\n\nconst INITIAL_STATE = {\n  groupId: '',\n  name: '',\n  title: '',\n  error: null,\n  selectedFile: null,\n  postTalk: () => {},\n}\n\nclass AddTalkForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { ...INITIAL_STATE }\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      groupId: this.props.match.params.groupId,\n      postTalk: this.props.firebase.postTalk,\n    })\n  }\n\n  onSubmit = (event) => {\n    console.log('submit!')\n    const { name, title, groupId, selectedFile } = this.state\n    this.state.postTalk(groupId, { name, title }, selectedFile)\n    this.props.history.push(`/focusgroups/${this.state.groupId}`)\n    event.preventDefault()\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  onFileChange = (event) => {\n    this.setState({\n      selectedFile: event.target.files[0],\n    })\n  }\n\n  render() {\n    const { name, title, groupId, error } = this.state\n\n    const isInvalid = title === '' || name === ''\n\n    console.log('state', this.state)\n    return (\n      <div>\n        <h1>Add a new {groupId} talk</h1>\n        <form onSubmit={this.onSubmit}>\n          <input\n            name='name'\n            value={name}\n            onChange={this.onChange}\n            type='text'\n            placeholder='Full Name'\n          />\n          <input\n            name='title'\n            value={title}\n            onChange={this.onChange}\n            type='text'\n            placeholder='title'\n          />\n          <input\n            name='selectedFile'\n            onChange={this.onFileChange}\n            type='file'\n            ref={this.state.fileInput}\n            placeholder='Your slides'\n          />\n          <button disabled={isInvalid} type='submit'>\n            Submit talk\n          </button>\n          {error && <p>{error.message}</p>}\n        </form>\n      </div>\n    )\n  }\n}\n\nconst AddTalkLink = ({ groupId }) => {\n  return (\n    <p>\n      <Link to={{ pathname: `/focusgroups/${groupId}/add` }}>Add a talk!</Link>\n    </p>\n  )\n}\n\nconst condition = (authUser) => !!authUser\n\nconst AddTalkPage = compose(\n  withRouter,\n  withFirebase,\n  withAuthorization(condition)\n)(AddTalkForm)\n\nexport default AddTalkPage\nexport { AddTalkLink, AddTalkForm }\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport { withFirebase } from '../../server/Firebase'\n//import * as ROUTES from '../../constants/routes'\nimport { GROUPS } from '../../constants/focusGroups'\nimport { AddTalkLink } from '../AddTalk'\n\nconst INITIAL_STATE = {\n  name: '',\n  longName: '',\n  hosts: '',\n  blocks: [],\n  blocksAndTalks: {},\n  loading: false,\n}\n\nclass FocusGroup extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { ...INITIAL_STATE }\n  }\n\n  componentDidMount() {\n    let myId = this.props.match.params.groupId\n    this.setState({\n      loading: true,\n      name: myId,\n      longName: GROUPS[myId].longName,\n      hosts: GROUPS[myId].hosts,\n      blocks: [...GROUPS[myId].blocks, 'unscheduled'],\n      talks: this.props.firebase.getBlockTalks(myId, [\n        ...GROUPS[myId].blocks,\n        'unscheduled',\n      ]),\n    })\n  }\n\n  render() {\n    //console.log('state:', this.state)\n\n    return (\n      <div>\n        <h1>{this.state.name}</h1>\n        <h3>{this.state.longName}</h3>\n        <p>Hosted by {this.state.hosts}</p>\n        {allBlocksComponent(this.state.talks)}\n        <AddTalkLink groupId={this.state.name} />\n      </div>\n    )\n  }\n}\n\nconst allBlocksComponent = (talkObj = {}) => {\n  const times = Object.keys(talkObj)\n\n  return (\n    <div>\n      <h2>Schedule of Talks</h2>\n      {times.map((time) => (\n        <div>{oneBlockComponentPublic(time, talkObj[time])}</div>\n      ))}\n    </div>\n  )\n}\n\nconst oneBlockComponentPublic = (block = '', talks = []) => {\n  console.log(block, talks)\n  return (\n    <div>\n      <h3>{block}</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>Title</th>\n            <th>Presenter</th>\n          </tr>\n          {talks.length > 0 &&\n            talks.map((talk) => (\n              <tr>\n                <td>{talk.title}</td>\n                <td>{talk.name}</td>\n              </tr>\n            ))}\n\n          {!talks.length && <p>No talks here!</p>}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst oneBlockComponentSignedIn = (block = '', talks = []) => {\n  return (\n    <div>\n      <h3>{block}</h3>\n      <h4>zoom link</h4>\n      <table>\n        <tbody>\n          <tr>\n            <th>Title</th>\n            <th>Presenter</th>\n          </tr>\n          {talks.length > 0 &&\n            talks.map((talk) => (\n              <tr>\n                <td>{talk.title}</td>\n                <td>{talk.name}</td>\n              </tr>\n            ))}\n\n          {!talks.length && <p>No talks here!</p>}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst oneBlockComponentHost = (block = '', talks = []) => {\n  return (\n    <div>\n      <h3>{block}</h3>\n      <h4>zoom link</h4>\n      <table>\n        <tbody>\n          <tr>\n            <th>Title</th>\n            <th>Presenter</th>\n          </tr>\n          {talks.length > 0 &&\n            talks.map((talk) => (\n              <tr>\n                <td>{talk.title}</td>\n                <td>{talk.name}</td>\n              </tr>\n            ))}\n\n          {!talks.length && <p>No talks here!</p>}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default compose(withFirebase)(FocusGroup)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Navigation from '../Navigation'\nimport LandingPage from '../Landing'\nimport SignInPage from '../SignIn'\nimport SignUpPage from '../SignUp'\nimport HomePage from '../Home'\nimport AdminPage from '../Admin'\nimport Schedule from '../Schedule'\nimport FocusGroups from '../FocusGroups'\nimport FocusGroup from '../FocusGroup'\nimport AddTalkPage from '../AddTalk'\nimport * as ROUTES from '../../constants/routes'\nimport { withAuthentication } from '../Session'\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n      <Switch>\n        <Route exact path={ROUTES.LANDING} component={LandingPage} />\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route path={ROUTES.SCHEDULE} component={Schedule} />\n        <Route path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.ADMIN} component={AdminPage} />\n        <Route exact path={ROUTES.FOCUSGROUPS} component={FocusGroups} />\n        <Route exact path='/focusgroups/:groupId' component={FocusGroup} />\n        <Route exact path='/focusgroups/:groupId/add' component={AddTalkPage} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nexport default withAuthentication(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './components/App'\nimport Firebase, { FirebaseContext } from './server/Firebase'\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}